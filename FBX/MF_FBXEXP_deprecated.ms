-- NOTE 下面这一行注释会通过 python 进行读取设置到工具的路径上
-- C:\Users\timmyliang\Desktop\test

-- https://help.autodesk.com/view/3DSMAX/2016/ENU/?guid=__files_GUID_9588A886_A811_4C05_9A07_B6A68C969050_htm
-- NOTE 获取当前脚本的路径
SCRIPT_PATH = getSourceFileName()

-- http://help.autodesk.com/view/3DSMAX/2015/ENU/?guid=__files_GUID_0EE531B2_6FF8_4D0B_ACA1_5400E0B9D604_htm
-- NOTE 获取当前脚本的文件夹
-- script_folder = getFilenamePath(script_path)

code = "__author__ =  'timmyliang'\n__email__ =  '820472580@qq.com'\n__date__ = '2019-11-26 14:52:34'\n\nu'''\nMoreFun - FBX导出工具\n简化 3dsMax FBX 导出流程\n'''\n\nimport os\nimport sys\ntry:\n    from PySide.QtCore import *\n    from PySide.QtGui import *\nexcept:\n    from PySide2.QtWidgets import *\n    from PySide2.QtCore import *\n    from PySide2.QtGui import *\n\nimport MaxPlus\nimport pymxs\nimport json\nfrom pymxs import runtime as rt\n\nSCRIPT_PATH = r'"+SCRIPT_PATH+"'\n\nclass Ui_Form(object):\n    def setupUi(self, Form):\n        Form.setObjectName('Form')\n        Form.resize(349, 184)\n        Form.setWhatsThis('')\n        self.verticalLayout = QVBoxLayout(Form)\n        self.verticalLayout.setObjectName('verticalLayout')\n        self.Options_BTN = QPushButton(Form)\n        self.Options_BTN.setObjectName('Options_BTN')\n        self.verticalLayout.addWidget(self.Options_BTN)\n        self.horizontalLayout = QHBoxLayout()\n        self.horizontalLayout.setObjectName('horizontalLayout')\n        self.label = QLabel(Form)\n        self.label.setObjectName('label')\n        self.horizontalLayout.addWidget(self.label)\n        self.Path_LE = QLineEdit(Form)\n        self.Path_LE.setObjectName('Path_LE')\n        self.horizontalLayout.addWidget(self.Path_LE)\n        self.Path_BTN = QPushButton(Form)\n        self.Path_BTN.setObjectName('Path_BTN')\n        self.horizontalLayout.addWidget(self.Path_BTN)\n        self.verticalLayout.addLayout(self.horizontalLayout)\n        self.Export_BTN = QPushButton(Form)\n        self.Export_BTN.setObjectName('Export_BTN')\n        self.verticalLayout.addWidget(self.Export_BTN)\n        spacerItem = QSpacerItem(20, 40, QSizePolicy.Minimum, QSizePolicy.Expanding)\n        self.verticalLayout.addItem(spacerItem)\n\n        self.retranslateUi(Form)\n        QMetaObject.connectSlotsByName(Form)\n\n    def retranslateUi(self, Form):\n        Form.setWindowTitle(u'MoreFun - FBX导出工具')\n        self.Options_BTN.setText(u'FBX导出选项')\n        self.label.setText(u'输出路径')\n        self.Path_BTN.setText(u'选择路径')\n        self.Export_BTN.setText(u'FBX导出')\n\nclass MF_FBXEXP_UI(QWidget,Ui_Form):\n    def __init__(self):\n        super(MF_FBXEXP_UI,self).__init__(MaxPlus.GetQMaxWindow())\n\n        self.setupUi(self)\n        self.Options_BTN.clicked.connect(self.openOptions)\n        self.Path_BTN.clicked.connect(self.selectPath)\n        self.Export_BTN.clicked.connect(self.exportFBX)\n        \n        # NOTE 防止窗口多开\n        for child in MaxPlus.GetQMaxWindow().children():\n            if 'MF_FBXEXP_UI' in str(type(child)):\n                child.close()\n\n        self.show()\n\n        # NOTE 读取 maxscript 第一行的注释获取\n        self.initPath()\n\n    def initPath(self):\n\n        if not os.path.exists(SCRIPT_PATH):\n            return\n\n        with open(SCRIPT_PATH,'r') as f:\n            self.script_data = f.readlines()\n        first_line = self.script_data[1].strip()\n        \n        self.Path_LE.setText(first_line[3:])\n\n    def openOptions(self):\n        rt.OpenFbxSetting()\n\n    def selectPath(self):\n\n        # NOTE 根据现有的路径打开路径选择\n        directory = os.path.dirname(self.Path_LE.text())\n        if not os.path.exists(directory):\n            directory = ''\n\n        output_path = QFileDialog.getExistingDirectory(self,dir=directory,caption=u'导出FBX文件目录')     \n        \n        # NOTE 如果关闭窗口或者取消\n        if not output_path :\n            return\n        \n        self.Path_LE.setText(output_path)\n\n        if not os.path.exists(SCRIPT_PATH):\n            return\n\n        self.script_data[1] = '-- %s\\n' % output_path\n        with open(SCRIPT_PATH,'w') as f:\n            f.writelines(self.script_data)\n\n    def exportFBX(self):\n        \n        output_path = os.path.normpath(self.Path_LE.text()).replace('\\\\','/')\n\n        if output_path == '':\n            QMessageBox.warning(self,u'警告',u'路径不能为空')\n            return\n        \n        folder = os.path.dirname(output_path)\n        if not os.path.exists(folder):\n            QMessageBox.warning(self,u'警告',u'当前给定目录不存在，请重新选择路径')\n            return\n\n        # NOTE 无窗口导出FBX\n        MaxPlus.Core.EvalMAXScript('''\n        if selection.count != 0 then(\n            sel_list = selection as array\n            deselect sel_list\n            for obj in sel_list do(\n                select obj\n                path_name = \"{0}/\" + obj.name + \".fbx\"\n                exportFile path_name #noPrompt selectedOnly:True using:FBXEXP\n            )\n        ) else (\n            file_name = getFilenameFile maxfilename\n            path_name = \"{0}/\" + file_name + \".fbx\"\n            exportFile path_name #noPrompt selectedOnly:False using:FBXEXP\n        )\n        '''.format(output_path))\n\n\nif __name__ == '__main__':\n    FBXEXP = MF_FBXEXP_UI()\n    \n"

-- NOTE 运行 Python 代码
-- print code
python.Execute code